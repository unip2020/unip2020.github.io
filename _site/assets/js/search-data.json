{
  
  "1": {
    "title": "Ilha de Mapeamento",
    "content": "Ilha de Mapeamento . A área de mapeamento será responsável por capturar informações dos cliente externos(usuários comuns e possíveis compradores) e clientes internos(funcionários do estabelecimento), todos deverão se conectar a rede wireless do local, os dados capturados serão apenas informações sobre distancia(RSSI e subtração de ruídos) dos dispositivo moveis(ou qualquer outro dispositivo conectado a rede) para que sejá possível realizar a triangulação de distancia em relação as outras antenas e se tornar possível saber a localização exata do dispositivo. Existem diversas tecnologias que poderiam ser utilizadas para esse rastreamento como bluetooth e rfid, optamos pelo Wirelles devido a essas outras tecnologias gerarem um desconforto nas pessoa ao precisar utilizar e fazer algo diferente em seus dispositivos as quais estão habituadas(apenas questão de habito do ser humano) e o wirelless podemos criar uma motivação a mais nas pessoas, essa motivação seria o acesso a internet sem consumir dados moveis do aparelho, tornando assim mais fácil a aceitação ao uso da ferramenta, outra questão é sobre gerar um relatório com o numero de adesões e aceitação do cliente ao uso, nessa tecnologia é possível detectar os dispositivos mesmo que esses não se conetem a rede e também se torna possível saber em quais locais a pessoa andou, com menos precisão mas ainda sim passível de ser monitorado. Faremos também o controlo das gôndulas e estoque, optamos por utilizar algo mais simples e de fácil acesso aos estabelecimentos, usaremos apenas um leitor de código de barras para entrada no estoque e saída, as saídas do estoque lançam automaticamente os produtos a sua respectiva gondula/prateleira e localização no supermercado que ficam armazenados em uma outra tabela, a qual os produtos receberão baixa ao ser bipados no caixa na hora do pagamento. O controle dos carrinhos será controlada apenas com um melhor processo documentando a responsabilidade de um funcionário que de hora em hora irá passar por todas a fileiras do mercado e irá levar os carrinhos até a area definida na entrada do local, o aplicativo apenas indicara sempre ao usuário esse local. . Capitação e monitoramento dos clientes. Uma rede Wireless com Access Points estarão espalhadas pelo local, a partir da distancia(RSSI) em que a pessoa se encontra da antena em que está conectada, será feito uma triangulação com o sinal das outras antenas dessa forma passando a localização exata do cliente, esse calculo leva em consideração a subtração do ruido. | Controle e mapeamento do estoque. Estoque será controlado via código de barras do produto, ao sair do estoque o produto devera ser lido seu código de barras e entrara para a nova tabela de gôndula do produto que somente recebera baixa ao ser passo pelo caixa. | Controle e mapeamento de carrinhos. O carrinho será controlado apenas através de um processo, onde terá uma pessoa que devera passar a cada hora pelo corredores do local e levar os carrinhos até o ponto definido na entrada do estabelecimento, o aplicativo sempre indicara esse ponto para a pessoa que precisar. | .",
    "url": "http://localhost:4000/mapeamento",
    "relUrl": "/mapeamento"
  }
  ,"2": {
    "title": "Ilha Mobile Detalhado",
    "content": "Detalhe Geral . Introdução . O propósito deste documento é informar aos participantes do projeto sobre seu desenvolvimento geral, suas funções, benefícios além de possíveis restrições e limitações, tudo de forma detalhada e o mais clara possível para um entendimento geral. O documento possui os requisitos funcionais e não funcionais especificados de acordo com o planejamento desenvolvido pelos participantes do projeto. . Finalidade . O projeto consiste da criação de um aplicativo para celulares Android que visa trazer serviços e ferramentas digitais para auxiliar o usuário. . Escopo . O projeto foi dividido em múltiplas ilhas com finalidades e escopos diferentes, cada uma responsável por um setor, sendo estes: Backend, Web, Mobile, Holograma e Mapeamento. Este documento refere a ilha de desenvolvimento mobile, o qual o objetivo é desenvolver um aplicativo de celular cujo desempenha tarefas que ajudem o usuário a: localizar produtos, navegar o supermercado, ajustar seu carrinho de compras e conferir produtos e promoções realizadas pelo supermercado. . Visão Geral . Além desta seção introdutória, as seções seguintes estão organizadas como descrito abaixo. . Seção 2 - Descrição geral: apresenta uma descrição geral do projeto, caracterizando qual é o seu escopo e descrevendo seus usuários. | Seção 3 - Requisitos não funcionais: cita e descreve brevemente os requisitos não funcionais do projeto. | Seção 4 - Requisitos funcionais: cita e descreve brevemente os requisitos funcionais do projeto. | Seção 5 - Casos de uso: descreve o funcionamento de certas interações de atores com o projeto | Seção 6 - Tecnologías usadas: cita e descreve as tecnologias usadas para o desenvolvimento do projeto. | . Descrição Geral . O objetivo do aplicativo mobile é facilitar a experiência de compra dos usuários utilizando ferramentas de localização e listagem. Ele visa principalmente atingir usuários que têm dificuldade de navegar em supermercados ou que desejam ir direto ao produto desejado sem ter que procurá-los diretamente. . Requisitos não funcionais . Dispositivo portátil: O aplicativo necessita de um dispositivo móvel com um sistema android versão 7 ou superior. | Banco de dados: O aplicativo necessita de acesso à um banco de dados com informações sobre os produtos disponíveis e clientes cadastrados. | Sistema de localização: O aplicativo necessita de acesso à um sistema de localização em interiores para traçar rotas. | Requisitos funcionais: . Cadastrar conta: O aplicativo deve permitir que o usuário se cadastre como cliente. A tela de cadastro de conta consiste de campos de texto obrigatórios e opcionais e um botão “Finalizar cadastro”. . | Campos obrigatórios: E-mail. | Senha. | Nome. | . | Campos opcionais: Endereço. | CEP. | . | . | Fazer login com conta cliente: O aplicativo deve permitir que o usuário faça login com sua conta. A tela de login consiste de campos de identificação, um botão “Fazer login” e um botão “Criar conta”. | Consultar produto: O aplicativo deve permitir que o usuário consulte informações sobre um ou mais produtos. | Gerar rota até um produto: O aplicativo deve gerar uma rota do presente local do usuário até um produto especificado caso esta seja solicitada pelo usuário. | Gerar carrinho de compras: O aplicativo deve permitir que o usuário adicione produtos consultados a um carrinho. | Contatar SAC: O aplicativo deve permitir que o usuário consiga entrar em contato com o SAC. | Casos de uso: . Cadastro de conta . [CASE01] Cadastro de conta | . Referência | [ReqF01] Cadastrar cliente | . Sumário | O usuário faz o cadastro de uma conta cliente. | . Pré-condições | O dispositivo usado deve ter conexão com a internet. | . Atores | Cliente, Servidor. | . Descrição | 1. O Cliente pressiona o botão “criar nova conta”. 2. O aplicativo exibe uma tela que contém um formulário com campos para os dados necessários para o cadastro e um botão para “criar sua conta”. 3. O Cliente pressiona o botão “criar sua conta”. 4. O aplicativo envia os dados preenchidos ao Servidor para validação. 5. O aplicativo recebe um retorno do Servidor confirmando o cadastro. 6. O aplicativo retorna à tela inicial. | . Alternativas | 1. No passo 3, caso haja algum campo obrigatório vazio ou com dados inválidos, o aplicativo exibe um aviso na tela informando o campo a ser preenchido corretamente e o formato de dados válido para o campo. 2.No passo 5, caso o Servidor retorne um erro com o processo de validação o aplicativo exibe um aviso na tela informando o motivo. E.g: “E-mail já cadastrado”. | . Exceção | O cadastro da conta cliente não pode ser concluído caso o Cliente deixe de preencher um campo obrigatório, caso dados inválidos tenham sido preenchidos ou caso existam dados salvos anteriormente no servidor que sejam idênticos aos dados preenchidos. | . Consultar produto . [CASE02] Consultar produto | . Referência | [ReqF03] Consultar produto | . Sumário | O cliente pesquisa produtos disponíveis. | . Pré-condições | O dispositivo usado deve ter conexão com a internet. | . Atores | Cliente, Servidor. | . Descrição | 1. O Cliente preenche o campo de pesquisa com o nome ou parte do nome do produto desejado. 2. O Cliente pressiona o botão “Pesquisar”. 3. O dados usados para pesquisa são enviados ao backend. 4. O backend retorna informações sobre os produtos relacionados à pesquisa. 5. O aplicativo exibe uma tela com o resultado da pesquisa. | . Alternativas | - | . Exceção | A pesquisa não deve ser efetuada caso o cliente não preenche o campo de pesquisa. | . Adicionar produtos ao carrinho . [CASE03] Adicionar produtos ao carrinho | . Referência | [ReqF03] Consultar produto, [ReqF05] Gerar carrinho de compras | . Sumário | Cliente adiciona produtos consultados à um carrinho de compras digital. | . Pré-condições | O dispositivo usado deve ter conexão com a internet, [CASE02]. | . Atores | Cliente. | . Descrição | 1. O Cliente determina a quantidade de produto a ser adicionado. 2. O cliente pressiona o botão “Adicionar ao carrinho”. 3. O aplicativo adiciona o produto na lista do carrinho. | . Alternativas | - | . Exceção | O produto não é adicionado ao carrinho caso a quantidade determinada seja menor ou igual a 0. | . Geração de rota até um produto . [CASE04] Geração de rota até um produto | . Referência | [ReqF03] Consultar produto, [ReqF05] Gerar rota até um produto | . Sumário | O cliente determina um produto, uma rota partindo da posição atual do cliente indo até o produto determinado é gerada e exibida no aplicativo. | . Pré-condições | O dispositivo usado deve ter conexão com a internet, [CASE02]. | . Atores | Cliente, Backend. | . Descrição | 1. O cliente pressiona o botão “rota”. 2. O aplicativo envia dados sobre o local para o backend. 3. Após serem processados o backend retorna informações de rota. 4. O aplicativo exibe a rota em um tela no aplicativo. | . Alternativas | - | . Exceção | A rota não é gerada caso ocorra um erro com o processamento de dados de rota. | . Tecnologias usadas . No desenvolvimento do projeto foram utilizadas as tecnologias descritas abaixo, escolhidas durante o planejamento, para realizar funções específicas. . Android Studio Android Studio é uma ferramenta de desenvolvimento mobile, desenvolvida pela Google utilizando como base o IntelliJ IDEA da JetBrains. É uma IDE de código aberto que trabalha especificamente para o desenvolvimento na plataforma Android, possuindo diversas utilidades que ajudam bastante na simplificação e agilização do desenvolvimento do código, dentre eles: Suporte para compilações baseadas em Gradle; | Refatoração de código específica para Android; | Editor de layout que permite que usuários arrastem componentes de interface de usuário, com opção de pré-visualizar layouts em várias configurações de tela; | Integração com GitHub. Levando em consideração essas utilidades, Android Studio foi considerada a melhor ferramenta para o desenvolvimento respectivo do projeto. | . | Kotlin: Kotlin é uma linguagem de programação multiplataforma de propósito geral que trabalha utilizando a JVM, assim como Java. Ela foi escolhida para se trabalhar no projeto por possuir uma versatilidade maior que a linguagem Java, que seria a outra opção para se utilizar no desenvolvimento. Ela é uma linguagem muito mais eficiente e com código mais simples, graças aos seus lambdas e co-rotinas, além de ser ​ null-safe, o que ajuda bastante no apuramento de bugs e erros. Além disso ela possui uma integração bem robusta com Java, permitindo que você utilize de basicamente quase todas as funções e bibliotecas que são utilizáveis em Java. . | Unity Unity é uma game engine, ou seja, é uma IDE projetada com foco em desenvolvimento de jogos. Embora sua principal funcionalidade seja desenvolvimento de jogos, diversas outras funcionalidades foram adicionadas à Unity ao longo dos anos, tornando possível o desenvolvimento de vários tipos diferentes de softwares. Unity possui suporte para diversas plataformas, como Linux, Windows e principalmente Android, facilitando o processo de integração com das funcionalidades AR com a parte mobile do projeto. . | Linguagem C# C# é uma linguagem de programação multi-paradigma de propósito geral. Projetada para ser simples, moderna e para ser usada no desenvolvimento de componentes de software adequados para ambientes distribuídos. C# é também a linguagem principal da Unity, a game engine que está sendo usada para desenvolvimento do módulo de geração de rotas usando Realidade Aumentada. . | Firebase Firebase é um conjunto de serviços prestados a área mobile e web, no caso deste projeto sua utilização principal é o Firebase Auth, que é o serviço de autenticação de login utilizado pelo usuário. . | Android Jetpack Android Jetpack é um conjunto de componentes, ferramentas e orientações que ajudam no desenvolvimento de aplicações android. É basicamente um conjunto essencial de bibliotecas para desenvolvimento android de maneira geral, e nosso projeto não é exceção; . | Android Room Room é uma biblioteca de persistência que fornece uma interação com banco de dados SQLite, é uma ferramenta que serve como uma camada de interação com o banco de dados. |",
    "url": "http://localhost:4000/mobile/detalhe",
    "relUrl": "/mobile/detalhe"
  }
  ,"3": {
    "title": "Ilha Backend Detalhado",
    "content": "Detalhe Geral . O Projeto recebeu o nome de Super Mercado Inteligente e está sendo desenvolvido para melhorar a experiência de navegação do cliente durante suas compras, além de seus outros módulos que visam controle de estoque, mapeamento, controle de fluxo, análise de produtos e funcionários. Ilha de Backend: Esta ilha é o centro de todo o projeto, onde serão desenvolvidos serviços em uma arquitetura REST para que possamos gerenciar os recursos do supermercado de diversas plataformas diferentes. . . Requisitos Não Funcionais: . Servidor Cloud: O que é cloud computing? Cloud computing ou computação em nuvem é uma tecnologia que oferece recursos computacionais remotos, como memória, processamento e armazenamento de dados. Nela, você pode hospedar sites, e-commerces, softwares e outros sistemas. Por que cloud computing? Escolher uma das soluções em cloud, seja IaaS (Infraestrutura como Serviço) ou PaaS (Plataforma como Serviço), garante aos seus projetos o uso da capacidade sob demanda, otimização de performance, segurança e previsibilidade de custos, sem compartilhar espaço ou recursos computacionais. | . . Linguagem de Programação JAVA O que é Spring Boot Spring Boot é um projeto da Spring que veio para facilitar o processo de configuração e publicação de nossas aplicações. Você escolhe os módulos que deseja através dos starters que inclui no pom.xml do seu projeto. Eles, basicamente, são dependências que agrupam outras dependências. Apesar do Spring Boot, através da convenção, já deixar tudo configurado, nada impede que você crie as suas customizações caso sejam necessárias. | . . Banco de Dados O que é o PostgreSQL? O PostgreSQL é um sistema de gerenciamento de banco de dados objeto-relacional (SGBDOR) baseado no POSTGRES Versão 4.2 desenvolvido pelo Departamento de Ciência da Computação da Universidade da Califórnia em Berkeley. O POSTGRES foi pioneiro em vários conceitos que somente se tornaram disponíveis muito mais tarde em alguns sistemas de banco de dados comerciais. O PostgreSQL é um descendente de código fonte aberto deste código original de Berkeley, que suporta grande parte do padrão SQL e oferece muitas funcionalidades modernas, como: | comandos complexos | chaves estrangeiras | gatilhos | visões | integridade transacional | controle de simultaneidade multiversão Além disso, o PostgreSQL pode ser ampliado pelo usuário de muitas maneiras como, por exemplo, adicionando novos | tipos de dado | funções | operadores | funções de agregação | métodos de índice | linguagens procedurais Devido à sua licença liberal, o PostgreSQL pode ser utilizado, modificado e distribuído por qualquer pessoa para qualquer finalidade, seja particular, comercial ou acadêmica, livre de encargos. | . . Requisitos Funcionais: . WEB Gerenciamento . Cadastrar, Alterar e Excluir Produtos. | Cadastrar, Alterar e Excluir Categoria de Produtos. | Cadastrar, Alterar e Excluir Funcionários. | Cadastrar, Alterar e Excluir Setores. | Cadastrar, Alterar e Excluir Fornecedores. | Inserir entrada de Lotes. | Dar entrada em pedidos de produtos aos Fornecedores. | . | Mobile . Mostrar localização de produtos. | Inserir, Alterar e Excluir Pedidos de Clientes. | Adicionar, Alterar e Remover itens da lista de compras do Cliente. | . | .",
    "url": "http://localhost:4000/backend/detalhe",
    "relUrl": "/backend/detalhe"
  }
  ,"4": {
    "title": "Ilha de Backend",
    "content": "Ilha de Backend . Esta ilha é o centro de todo o projeto, onde serão desenvolvidos serviços em uma arquitetura REST para que possamos gerenciar os recursos do supermercado de diversas plataformas diferentes. . Requisitos Não Funcionais: . Servidor Cloud Documentação das APIs. | . | Linguagem de Programação JAVA versão SE8. | Framework Springboot2. | . | Banco de Dados PostgreSQL. | . | . Requisitos Funcionais: . WEB Gerenciamento Cadastrar, Alterar e Excluir Produtos. | Cadastrar, Alterar e Excluir Categoria de Produtos. | Cadastrar, Alterar e Excluir Funcionários. | Cadastrar, Alterar e Excluir Setores. | Cadastrar, Alterar e Excluir Fornecedores. | Inserir entrada de Lotes. | Dar entrada em pedidos de produtos aos Fornecedores. | . | Mobile Mostrar localização de produtos. | Inserir, Alterar e Excluir Pedidos de Clientes. | Adicionar, Alterar e Remover itens da lista de compras do Cliente | . | .",
    "url": "http://localhost:4000/backend",
    "relUrl": "/backend"
  }
  ,"5": {
    "title": "Ilha de Mobile",
    "content": "Ilha de Mobile . O objetivo do aplicativo mobile é facilitar a experiência de compra dos usuários utilizando ferramentas de localização e listagem. Ele visa principalmente atingir usuários que têm dificuldade de navegar em supermercados ou que desejam ir direto ao produto desejado sem ter que procurá-los diretamente. . Requisitos Não Funcionais: . Linguagens Utilizadas Kotlin. | Unity. | C#. | . | Ferramentas Android Studio IDE. | Firebase. | Android Jetpack. | Android Room. | . | . Requisitos Funcionais: . Cliente Cadastrar Conta. | Consultar Produto. | Adicionar Produtos ao Carrinho. | Visualizar rota até o Produto. | . | .",
    "url": "http://localhost:4000/mobile",
    "relUrl": "/mobile"
  }
  ,"6": {
    "title": "Ilha WEB Detalhado",
    "content": "Detalhe Geral . O setor administrativo com todas as suas burocracias têm demonstrado ultimamente o quão necessário é um sistema administrativo que possa auxiliar e facilitar a vida do administrador, podendo gerir o estoque, colaboradores e outras funções administrativas. A quantidade de startups que atuam no setor administrativo é grande, mas é ainda um mercado com um grande potencial de crescimento. Nos últimos anos estamos vivenciando o nascimento de grandes startups e uma das ferramentas mais queridas para desenvolvimento de sistemas dessa nova geração é a utilização de frameworks que auxiliam neste processo. O Angular foi a primeira iniciativa do google na construção de um framework, portanto o Angular é um framework javascript para a construção de páginas únicas em que o usuário recebe todos os arquivos da aplicação, ou seja, ele não precisa mais consultar ao servidor para buscar outra página. Um exemplo seria caso o usuário está na página inicial e ele acessa a página de contato não é necessário ele ir lá no servidor buscando a página de contato, pois, a página já armazenada na máquina dele, ou seja, quem faz essa rota é a aplicação frontend executada diretamente no navegador dele. Esse trabalho tem como objetivo a criação de um sistema administrativo integrado, dessa forma será possívelá gerir estoques, ajudar na administração dos colaboradores e em outras funções administrativas. . Requisitos Funcionais . Funcionário Cadastro de produto: Incluir produto – O funcionário irá cadastrar o produto no sistema. | . | Cadastrar categoria: Nome da categoria – O funcionário vai cadastrar qual a categoria do produto. | Editar atributos – Em caso de cadastrar errado a categoria, o funcionário tem como editar e modificar a descrição. | Remover categoria – Caso não precise mais de uma certa categoria, tem como exclui-la | . | Cadastrar lote recebido: Incluir lote de produto – Assim que chegar o lote de mercadoria, o funcionário vai cadastrar neste modulo. | . | Ver estoque: Visualizar produto – O funcionário responsável do estoque, tem como ver as seguintes funcionalidades: descrição, quantidade, posição, pedido de compra, lote. | . | Cadastrar outros funcionários: Cadastro de colaboradores – A pessoa responsável, irá cadastrar os novos colaboradores da empresa. | Cadastro de Terceiros – A pessoa responsável, irá cadastrar os novos prestadores de serviço da empresa. | . | . | Administrativo Ver estoque: Visualizar produto – O funcionário responsável do estoque, tem como ver as seguintes funcionalidades: descrição, quantidade, posição, pedido de compra, lote. | . | Ver relatórios: Produtos a vencer – Controle de produtos a vencer. | Pedidos de compra – Controlar os pedidos de compra. | Consumo diário, semanal e anual de produtos – Controlar o consumo dos produtos da empresa. | Movimentação – Controlar a movimentação dos produtos na empresa. | . | Ver funcionários: Fixa cadastral – Modulo de visualização da função e setor do funcionário. | . | Ver produtos: Visualizar produto – Modulo de visualização dos produtos em estoque. | Alterar descrição do produto – Pra caso precise alterar a descrição do produto. | . | Balanço de vendas: Vendas a prazo – Balanço contábil das vendas a prazos. | Vendas à vista – Balanço contábil das vendas a vista. | Lucro – Balanço contábil do lucro da empresa. | . | Gerenciar cargos: Fixa cadastral – Módulo onde somente o gerente tem a permissão de visualizar e gerenciar os funcionários com as informações da função, setor e salário. | Horas trabalhadas – Controle das horas trabalhadas. | Horas extras – Controle das horas extras | Excluir funcionário – Em caso de demissão do funcionário. | . | . | . | . Caso de uso . Módulo do administrador. . Para o administrador do sistema, é de grande importância conhecer seus números, pois é somente através deles, é possível conhecer completamente a sua empresa. Pensando nisso, foi atribuído funcionalidades, para que o administrador possa ter total controle e acesso aos seus dados. . Visualização de estoque: . Permite conhecer todos os produtos disponíveis em estoque e suas respectivas quantidades. . Gerenciamento de colaboradores: . Possibilidade um controle de todos os colaboradores e seus respectivos cargos e responsabilidades, tendo um controle total de cada área da empresa e seus responsáveis. . Análise de preços: . Com base em um balanço do valor comprado e na demanda do produto, permitir analisar a melhor margem de revenda, tendo em vista o melhor lucro e a demanda sobre o produto. . Balanço de vendas: . Se consiste em um relatório geral, que analisa todas os dados anteriores. É possível obter um balanço dos itens vendidos e do percentual de lucro em cima, visando melhorar a margem de lucro e o fluxo de mercadoria no mercado. Com base em gráficos, permite ao administrador identificar itens com venda insatisfatórios e analisar meios de otimizar as suas vendas. . Relatórios: . Através dos relatórios, se obtém as informações de tudo que foi vendido, itens em estoque e margens de lucro. Permite que o administrador identifique valores de vendas diárias, itens que estão prestes a vencer, e itens que não estão tendo um bom desempenho de venda, assim conseguindo analisar meios de otimizar controlar suas vendas. . Módulo do funcionário. . Cadastro de produto: . Facilite o cadastro de produto ao inventário, com o cadastro de informações úteis aos administradores, onde o funcionário deve inserir o produto, a data da chegada, categoria, validade e lote. . Consulta de estoque: . Caso um determinado produto não seja encontrado nas prateleiras, é possível através de uma simples consulta, saber quantos desse item ainda estão disponíveis para o cliente. Em casos de esgotamento, é possível acionar um alerta, caso não haja previsão de reabastecimento do produto. . Fazer pedido ao fornecedor: . Possibilita ao gerente solicitar o reabastecimento de um produto e realizar cotações com o fornecedor . Cadastro de funcionários: . Aba destinada a inclusão de novos funcionários ao sistema, habilitando acessos e responsabilidades. . Requisitos Não Funcionais . Desempenho Em nosso sistema administrativo integrado, focaremos em desenvolver um projeto no qual tenha um tempo de resposta curto e seja feita diversas funções com agilidade. | . | Usabilidade Em questão de usabilidade do sistema, sua interface gráfica será desenvolvida de forma que fique fácil interagir com o sistema independente do nível do conhecimento do usuário, facilitando o uso e padronizando todo o sistema. | . | Confiabilidade Neste ponto teremos uma questão de garantia para atender a todos pré-requisitos definidos pelo usuário. | . | Segurança Quando falamos sobre o ponto de segurança, todo o sistema será com base da criptografia web SHA2 trazendo uma maior segurança para o usuário e confidencialidade da informação que estará circulando pelo sistema. | . | Disponibilidade O sistema será hospedado em um servidor no qual sua disponibilidade deverá ser 24x7, pois, vários setores e funções dependem dele para o funcionamento do estabelecimento e seus respectivos setores. | . | Manutenção Será executado manutenção preventiva a cada período pré-determinado pelo responsável, onde nela será possível prever os erros que poderão ocorrer e corrigindo-os com antecedência. | . | Tecnologias envolvidas Quando falamos sobre as tecnologias aplicadas a este sistema, podemos citar por exemplo HTML5 para o desenvolvimento do layout, CSS3 para a criação visual da interface, JavaScript para gerenciar funções de scripts, Rest API para comunicação, Materialize para auxiliar no desenvolvimento. | . | . Tecnologia aplicada . O ​ Visual Studio Code​ , desenvolvido em 2015 pela Microsoft, é uma IDE, ou editor de código-fonte, ou editor de texto multiplataforma disponibilizado pela Microsoft destinado à desenvolver aplicações web, ele oferece suporte para muitas linguagens, neste projeto iremos utilizar o JavaScript, HTML e CSS. . JavaScript é uma linguagem de programação que foi criada em 1996 pelo famoso programador Brendan Eich (foi um dos fundadores da Mozilla Corporation), a intenção era tornar as programações dentro das páginas web com alertas e animações mais simples. Atualmente o JavaScript, além de animações e alertas, implementa gráficos, mapas ou informações que se atualizam em períodos padronizados, por exemplo . HTML (Hypertext Markup Language), é o componente de base pra web, e também é uma linguagem de marcação usada para estruturar páginas web; ela é fundamentada em tags, que representam diversos elementos de uma página, como imagens, links, botões, etc. . CSS​ (Cascading Style Sheets) é um mecanismo para adicionar estilo a um documento web, e também é uma linguagem de folhas de estilo; ele representa a parte visual do site (cor do texto e do fundo, fonte, espaçamento, tabelas, layouts, ajustar imagens para suas telas). . Materialize é um framework front-end tem o intuito de entregar uma design mais limpo, consciente e objetivo, para aplicativos e páginas mobile em diferentes plataformas; é uma combinação bem elaborada dos fundamentos do bom design clássico com a adição de tecnologia e ciência. . Rest Api é uma interface que fornece dados em um formato padronizado baseado em requisições HTTP; ela fica parada até que acontece uma requisição, É como uma moto estacionada que só é ativada após a ignição com a chave. .",
    "url": "http://localhost:4000/web/detalhe",
    "relUrl": "/web/detalhe"
  }
  ,"7": {
    "title": "Ilha de WEB",
    "content": "Ilha de WEB Gerenciamento . Esse trabalho tem como objetivo a criação de um sistema administrativo integrado, dessa forma será possível gerir estoques, ajudar na administração dos colaboradores e em outras funções administrativas. . Requisitos Não Funcionais: . Linguagem de Programação Web HTML5 | CSS3 | Typescript | APIs REST | . | Frameworks Angular | Materialize | . | . Requisitos Funcionais: . Funcionário Cadastrar, Editar e Excluir Produtos. | Cadastrar, Editar e Excluir Categorias. | Cadastrar Lote Recebido. | Ver Estoque. | Cadastrar, Editar e Excluir outros Funcionários. | . | Administrativo Ver Estoque. | Ver Relatórios (Produtos e Funcionários). | Ver Funcionários. | Ver Balanço de Vendas. | Gerenciar Cargos. | . | .",
    "url": "http://localhost:4000/web",
    "relUrl": "/web"
  }
  ,"8": {
    "title": "Introdução",
    "content": "A Mudança de como fazer compras. . Mercado Inteligente consiste na evolução do que temos hoje como mercado, visando a melhora da qualidade de como se fazer compras comuns na era atual, utilizando da prática de sistema distribuído, para desenvolver módulos que iram atendender determinados requisitos e que poderam ser escalaveis conforme a necessidade e crescimentos, por parte dos usuários, desejamos atender a eles de forma agil, disponibilizando ferramentas de procura de produtos por realidade aumentada, e o aumento do informativo de produtos, facilitando a forma de pagamento entre outros que possam facilitar o uso dos mesmos, por parte da gerencia do local, será a criação de um sistema de gerenciamento, I.A para analise do que está ocorrendo no local, mapeamento dos produtos, mapeamento dos carrinhos, segurança automatizada e outros modulos. . .",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  }
  
}